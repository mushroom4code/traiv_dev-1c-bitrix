{"version":3,"file":"formatter.bundle.js","sources":["../src/node-formatter.js","../src/formatter.js"],"sourcesContent":["import { Type } from 'main.core';\nimport {\n\tBBCodeNode,\n\ttypeof BBCodeElementNode,\n\ttypeof BBCodeRootNode,\n\ttypeof BBCodeTextNode,\n} from 'ui.bbcode.model';\nimport { type FormatterData, typeof Formatter } from './formatter';\n\nexport type ConvertCallbackOptions = {\n\tnode: BBCodeElementNode | BBCodeRootNode | BBCodeTextNode,\n\tformatter: Formatter,\n\tdata: FormatterData,\n};\n\nexport type ValidateCallbackOptions = ConvertCallbackOptions & {};\nexport type BeforeConvertCallbackOptions = ConvertCallbackOptions & {};\nexport type ForChildCallbackOptions = ConvertCallbackOptions & {\n\telement: HTMLElement,\n};\nexport type AfterCallbackOptions = ForChildCallbackOptions & {};\nexport type FormatterCallbackResult = HTMLElement | Text | null;\n\nexport type NodeFormatterOptions = {\n\tname: string | Array<string>,\n\tconvert: (ConvertCallbackOptions) => FormatterCallbackResult,\n\tvalidate?: (ValidateCallbackOptions) => boolean,\n\tbefore?: (BeforeConvertCallbackOptions) => BBCodeNode | null,\n\tafter?: (AfterCallbackOptions) => FormatterCallbackResult,\n\tforChild?: (ForChildCallbackOptions) => FormatterCallbackResult,\n};\n\ntype DefaultNodeConverterOptions = ConvertCallbackOptions | BeforeConvertCallbackOptions;\ntype DefaultElementConverterOptions = ForChildCallbackOptions | AfterCallbackOptions;\n\nconst nameSymbol: Symbol = Symbol('name');\nconst groupSymbol: Symbol = Symbol('group');\nconst validateSymbol: Symbol = Symbol('validate');\nconst beforeSymbol: Symbol = Symbol('before');\nconst convertSymbol: Symbol = Symbol('convert');\nconst forChildSymbol: Symbol = Symbol('forChild');\nconst afterSymbol: Symbol = Symbol('after');\n\nconst defaultValidator = () => true;\nconst defaultNodeConverter = ({ node }: DefaultNodeConverterOptions) => node;\nconst defaultElementConverter = ({ element }: DefaultElementConverterOptions) => element;\n\nexport class NodeFormatter\n{\n\t[nameSymbol]: string = 'unknown';\n\t[groupSymbol]: ?Array<string> = null;\n\t[validateSymbol]: (ValidateCallbackOptions) => boolean;\n\t[beforeSymbol]: (BeforeConvertCallbackOptions) => FormatterCallbackResult = null;\n\t[convertSymbol]: (ConvertCallbackOptions) => FormatterCallbackResult = null;\n\t[forChildSymbol]: (ForChildCallbackOptions) => FormatterCallbackResult = null;\n\t[afterSymbol]: (AfterCallbackOptions) => FormatterCallbackResult = null;\n\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tif (Type.isArray(options.name))\n\t\t{\n\t\t\tthis[groupSymbol] = [...options.name];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setName(options.name);\n\t\t}\n\n\t\tthis.setValidate(options.validate);\n\t\tthis.setBefore(options.before);\n\t\tthis.setConvert(options.convert);\n\t\tthis.setForChild(options.forChild);\n\t\tthis.setAfter(options.after);\n\t}\n\n\tsetName(name: string)\n\t{\n\t\tif (!Type.isStringFilled(name))\n\t\t{\n\t\t\tthrow new TypeError('Name is not a string');\n\t\t}\n\n\t\tthis[nameSymbol] = name;\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this[nameSymbol];\n\t}\n\n\tsetValidate(callback: (ValidateCallbackOptions) => boolean)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[validateSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[validateSymbol] = defaultValidator;\n\t\t}\n\t}\n\n\tvalidate(options: ValidateCallbackOptions): boolean\n\t{\n\t\tconst result: ?boolean = this[validateSymbol](options);\n\t\tif (Type.isBoolean(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError(`Validate callback for \"${this.getName()}\" returned not boolean`);\n\t}\n\n\tsetBefore(callback: (BeforeConvertCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[beforeSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[beforeSymbol] = defaultNodeConverter;\n\t\t}\n\t}\n\n\trunBefore(options: BeforeConvertCallbackOptions): FormatterCallbackResult\n\t{\n\t\tconst result: ?BBCodeNode = this[beforeSymbol](options);\n\t\tif (result instanceof BBCodeNode || Type.isNull(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError(`Before callback for \"${this.getName()}\" returned not null or BBCodeNode`);\n\t}\n\n\tsetConvert(callback: (ConvertCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (!Type.isFunction(callback))\n\t\t{\n\t\t\tthrow new TypeError('Convert is not a function');\n\t\t}\n\n\t\tthis[convertSymbol] = callback;\n\t}\n\n\trunConvert(options: ConvertCallbackOptions): FormatterCallbackResult\n\t{\n\t\tconst result: ?HTMLElement | Text = this[convertSymbol](options);\n\t\tif (Type.isDomNode(result) || Type.isNull(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError(`Convert callback for \"${this.getName()}\" returned not HTMLElement, Text or null`);\n\t}\n\n\tsetForChild(callback: (ForChildCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[forChildSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[forChildSymbol] = defaultElementConverter;\n\t\t}\n\t}\n\n\trunForChild(options: ForChildCallbackOptions): FormatterCallbackResult\n\t{\n\t\tconst result: ?HTMLElement | Text = this[forChildSymbol](options);\n\t\tif (Type.isDomNode(result) || Type.isNull(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError(`ForChild callback for \"${this.getName()}\" returned not HTMLElement, Text or null`);\n\t}\n\n\tsetAfter(callback: (AfterCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[afterSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[afterSymbol] = defaultElementConverter;\n\t\t}\n\t}\n\n\trunAfter(options: AfterCallbackOptions): FormatterCallbackResult\n\t{\n\t\tconst result: ?HTMLElement | Text = this[afterSymbol](options);\n\t\tif (Type.isDomNode(result) || Type.isNull(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError(`After callback for \"${this.getName()}\" returned not HTMLElement, Text or null`);\n\t}\n}\n","import { Type } from 'main.core';\nimport { BBCodeFragmentNode, BBCodeNode, BBCodeScheme } from 'ui.bbcode.model';\nimport { BBCodeParser } from 'ui.bbcode.parser';\nimport { NodeFormatter, type BeforeConvertCallbackOptions } from './node-formatter';\n\nexport * from './node-formatter';\n\nexport type FormatterData = {\n\t[key: string]: any,\n};\n\nexport type UnknownNodeCallbackOptions = {\n\tnode: BBCodeNode,\n\tformatter: Formatter,\n\tdata: FormatterData,\n};\n\nexport type FormatterOptions = {\n\tformatters: Array<NodeFormatter>,\n\tonUnknown: (UnknownNodeCallbackOptions) => BBCodeNode | null,\n};\n\nexport type FormatterFormatOptions = {\n\tsource: BBCodeNode | string,\n\tdata?: FormatterData,\n};\n\nconst formattersSymbol: Symbol = Symbol('formatters');\nconst onUnknownSymbol: Symbol = Symbol('onUnknown');\n\n/**\n * @memberOf BX.UI.BBCode\n */\nexport class Formatter\n{\n\t[formattersSymbol]: Map<any, any> = new Map();\n\t[onUnknownSymbol]: (UnknownNodeCallbackOptions) => NodeFormatter | null = null;\n\n\tconstructor(options: FormatterOptions = {})\n\t{\n\t\tthis.setNodeFormatters(options.formatters);\n\t\tif (Type.isNil(options.onUnknown))\n\t\t{\n\t\t\tthis.setOnUnknown(this.getDefaultUnknownNodeCallback());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setOnUnknown(options.onUnknown);\n\t\t}\n\t}\n\n\tstatic prepareSourceNode(source: BBCodeNode | string): BBCodeNode | null\n\t{\n\t\tif (source instanceof BBCodeNode)\n\t\t{\n\t\t\treturn source;\n\t\t}\n\n\t\tif (Type.isString(source))\n\t\t{\n\t\t\treturn (new BBCodeParser()).parse(source);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tsetNodeFormatters(formatters: Array<NodeFormatter>)\n\t{\n\t\tif (Type.isArrayFilled(formatters))\n\t\t{\n\t\t\tformatters.forEach((formatter: NodeFormatter) => {\n\t\t\t\tthis.setNodeFormatter(formatter);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetNodeFormatter(formatter: NodeFormatter)\n\t{\n\t\tif (formatter instanceof NodeFormatter)\n\t\t{\n\t\t\tthis[formattersSymbol].set(formatter.getName(), formatter);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('formatter is not a NodeFormatter instance.');\n\t\t}\n\t}\n\n\tgetDefaultUnknownNodeCallback(): (UnknownNodeCallbackOptions) => NodeFormatter | null\n\t{\n\t\treturn () => {\n\t\t\treturn new NodeFormatter({\n\t\t\t\tname: 'unknown',\n\t\t\t\tbefore({ node }: BeforeConvertCallbackOptions): BBCodeFragmentNode {\n\t\t\t\t\tconst scheme: BBCodeScheme = node.getScheme();\n\n\t\t\t\t\tif (node.isVoid())\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheme.createFragment({\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\tscheme.createText(node.getOpeningTag()),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn scheme.createFragment({\n\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\tscheme.createText(node.getOpeningTag()),\n\t\t\t\t\t\t\t...node.getChildren(),\n\t\t\t\t\t\t\tscheme.createText(node.getClosingTag()),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tconvert(): DocumentFragment {\n\t\t\t\t\treturn document.createDocumentFragment();\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n\n\tsetOnUnknown(callback: (UnknownNodeCallbackOptions) => NodeFormatter | null)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[onUnknownSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('OnUnknown callback is not a function.');\n\t\t}\n\t}\n\n\trunOnUnknown(options: UnknownNodeCallbackOptions): NodeFormatter | null\n\t{\n\t\tconst result: NodeFormatter | null = this[onUnknownSymbol](options);\n\t\tif (result instanceof NodeFormatter || Type.isNull(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError('OnUnknown callback returned not NodeFormatter instance or null.');\n\t}\n\n\tgetNodeFormatter(node: BBCodeNode): NodeFormatter | null\n\t{\n\t\tconst formatter: ?NodeFormatter = this[formattersSymbol].get(node.getName());\n\t\tif (formatter instanceof NodeFormatter)\n\t\t{\n\t\t\treturn formatter;\n\t\t}\n\n\t\treturn this.runOnUnknown({ node, formatter: this });\n\t}\n\n\tformat(options: FormatterFormatOptions): DocumentFragment | HTMLElement | Text | null\n\t{\n\t\tif (!Type.isPlainObject(options))\n\t\t{\n\t\t\tthrow new TypeError('options is not a object');\n\t\t}\n\n\t\tconst { source, data = {} } = options;\n\t\tif (!Type.isUndefined(data) && !Type.isPlainObject(data))\n\t\t{\n\t\t\tthrow new TypeError('options.data is not a object');\n\t\t}\n\n\t\tconst sourceNode: ?BBCodeNode = Formatter.prepareSourceNode(source);\n\t\tif (Type.isNull(sourceNode))\n\t\t{\n\t\t\tthrow new TypeError('options.source is not a BBCodeNode or string');\n\t\t}\n\n\t\tconst nodeFormatter: NodeFormatter = this.getNodeFormatter(sourceNode);\n\t\tconst isValidNode: boolean = nodeFormatter.validate({\n\t\t\tnode: sourceNode,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t\tif (!isValidNode)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst preparedNode: ?BBCodeNode = nodeFormatter.runBefore({\n\t\t\tnode: sourceNode,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t\tif (Type.isNull(preparedNode))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst convertedElement: ?HTMLElement = nodeFormatter.runConvert({\n\t\t\tnode: preparedNode,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t\tif (Type.isNull(convertedElement))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tpreparedNode.getChildren().forEach((childNode: BBCodeNode) => {\n\t\t\tconst childElement: ?HTMLElement = this.format({ source: childNode, data });\n\t\t\tif (Type.isDomNode(childElement))\n\t\t\t{\n\t\t\t\tconst convertedChildElement: ?HTMLElement = nodeFormatter.runForChild({\n\t\t\t\t\tnode: childNode,\n\t\t\t\t\telement: childElement,\n\t\t\t\t\tformatter: this,\n\t\t\t\t\tdata,\n\t\t\t\t});\n\t\t\t\tif (Type.isDomNode(convertedChildElement))\n\t\t\t\t{\n\t\t\t\t\tconvertedElement.appendChild(convertedChildElement);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn nodeFormatter.runAfter({\n\t\t\tnode: preparedNode,\n\t\t\telement: convertedElement,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t}\n}\n"],"names":["nameSymbol","Symbol","groupSymbol","validateSymbol","beforeSymbol","convertSymbol","forChildSymbol","afterSymbol","defaultValidator","defaultNodeConverter","node","defaultElementConverter","element","NodeFormatter","constructor","options","Type","isArray","name","setName","setValidate","validate","setBefore","before","setConvert","convert","setForChild","forChild","setAfter","after","isStringFilled","TypeError","getName","callback","isFunction","result","isBoolean","runBefore","BBCodeNode","isNull","runConvert","isDomNode","runForChild","runAfter","formattersSymbol","onUnknownSymbol","Formatter","Map","setNodeFormatters","formatters","isNil","onUnknown","setOnUnknown","getDefaultUnknownNodeCallback","prepareSourceNode","source","isString","BBCodeParser","parse","isArrayFilled","forEach","formatter","setNodeFormatter","set","scheme","getScheme","isVoid","createFragment","children","createText","getOpeningTag","getChildren","getClosingTag","document","createDocumentFragment","runOnUnknown","getNodeFormatter","get","format","isPlainObject","data","isUndefined","sourceNode","nodeFormatter","isValidNode","preparedNode","convertedElement","childNode","childElement","convertedChildElement","appendChild"],"mappings":"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"}