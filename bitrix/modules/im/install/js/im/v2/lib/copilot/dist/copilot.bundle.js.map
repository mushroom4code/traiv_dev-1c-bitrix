{"version":3,"file":"copilot.bundle.js","sources":["../src/copilot.js"],"sourcesContent":["import { Extension } from 'main.core';\n\nimport { ChatType } from 'im.v2.const';\nimport { Core } from 'im.v2.application.core';\n\nimport type { JsonObject } from 'main.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { ImModelUser } from 'im.v2.model';\n\nexport class CopilotManager\n{\n\tstore: Store;\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t}\n\n\tasync handleRecentListResponse(copilotData: JsonObject): Promise\n\t{\n\t\tif (!copilotData)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst { recommendedRoles, roles, chats, messages } = copilotData;\n\t\tif (!roles)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.store.dispatch('copilot/chats/add', chats),\n\t\t\tthis.store.dispatch('copilot/roles/add', roles),\n\t\t\tthis.store.dispatch('copilot/setRecommendedRoles', recommendedRoles),\n\t\t\tthis.store.dispatch('copilot/messages/add', messages),\n\t\t]);\n\t}\n\n\tasync handleChatLoadResponse(copilotData: JsonObject): Promise\n\t{\n\t\tif (!copilotData)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst { aiProvider, chats, roles, messages } = copilotData;\n\t\tif (!roles)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.store.dispatch('copilot/setProvider', aiProvider),\n\t\t\tthis.store.dispatch('copilot/roles/add', roles),\n\t\t\tthis.store.dispatch('copilot/chats/add', chats),\n\t\t\tthis.store.dispatch('copilot/messages/add', messages),\n\t\t]);\n\t}\n\n\tasync handleRoleUpdate(copilotData: JsonObject): Promise\n\t{\n\t\tconst { chats, roles } = copilotData;\n\t\tif (!roles)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.store.dispatch('copilot/roles/add', roles),\n\t\t\tthis.store.dispatch('copilot/chats/add', chats),\n\t\t]);\n\t}\n\n\tasync handleMessageAdd(copilotData): Promise\n\t{\n\t\tconst { chats, roles, messages } = copilotData;\n\t\tif (!roles)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.store.dispatch('copilot/roles/add', roles),\n\t\t\tthis.store.dispatch('copilot/chats/add', chats),\n\t\t\tthis.store.dispatch('copilot/messages/add', messages),\n\t\t]);\n\t}\n\n\tgetRoleAvatarUrl({ avatarDialogId, contextDialogId }: { avatarDialogId: string, contextDialogId: string }): ?string\n\t{\n\t\tif (!this.isCopilotChatOrBot(avatarDialogId))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this.store.getters['copilot/chats/getRoleAvatar'](contextDialogId);\n\t}\n\n\tisCopilotBot(userId: string | number): boolean\n\t{\n\t\treturn this.store.getters['users/bots/isCopilot'](userId);\n\t}\n\n\tisCopilotChat(dialogId: string): boolean\n\t{\n\t\treturn this.store.getters['chats/get'](dialogId)?.type === ChatType.copilot;\n\t}\n\n\tisCopilotChatOrBot(dialogId: string): boolean\n\t{\n\t\treturn this.isCopilotChat(dialogId) || this.isCopilotBot(dialogId);\n\t}\n\n\tgetMessageRoleAvatar(messageId: number): ?string\n\t{\n\t\treturn this.store.getters['copilot/messages/getRole'](messageId)?.avatar?.medium;\n\t}\n\n\tisCopilotRolesAvailable(): boolean\n\t{\n\t\tconst settings = Extension.getSettings('im.v2.lib.copilot');\n\n\t\treturn settings.copilotRolesAvailable === 'Y';\n\t}\n\n\tgetNameWithRole({ dialogId, messageId }): string\n\t{\n\t\tconst user: ImModelUser = this.store.getters['users/get'](dialogId);\n\t\tconst roleName = this.store.getters['copilot/messages/getRole'](messageId).name;\n\n\t\tif (!this.isCopilotRolesAvailable())\n\t\t{\n\t\t\treturn user.name;\n\t\t}\n\n\t\treturn `${user.name} (${roleName})`;\n\t}\n}\n"],"names":["CopilotManager","constructor","store","Core","getStore","handleRecentListResponse","copilotData","Promise","resolve","recommendedRoles","roles","chats","messages","all","dispatch","handleChatLoadResponse","aiProvider","handleRoleUpdate","handleMessageAdd","getRoleAvatarUrl","avatarDialogId","contextDialogId","isCopilotChatOrBot","getters","isCopilotBot","userId","isCopilotChat","dialogId","type","ChatType","copilot","getMessageRoleAvatar","messageId","avatar","medium","isCopilotRolesAvailable","settings","Extension","getSettings","copilotRolesAvailable","getNameWithRole","user","roleName","name"],"mappings":"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"}