{"version":3,"file":"registry.bundle.js","sources":["../src/recent/classes/recent-data-extractor.js","../src/recent/recent.js","../src/chat/classes/chat-data-extractor.js","../src/chat/classes/load.js","../src/chat/classes/create.js","../src/chat/classes/update.js","../src/chat/classes/rename.js","../src/chat/classes/mute.js","../src/chat/classes/pin.js","../src/chat/classes/read.js","../src/chat/classes/user.js","../src/chat/chat.js","../src/message/classes/load.js","../src/message/classes/pin.js","../src/message/classes/edit.js","../src/message/classes/delete.js","../src/message/classes/mark.js","../src/message/classes/favorite.js","../src/message/message.js","../src/sending/sending.js","../src/notification/notification.js","../src/disk/disk.js","../src/uploading/classes/uploader-wrapper.js","../src/uploading/uploading.js","../src/settings/settings.js","../src/lines/lines.js","../src/copilot/copilot.js","../src/comments/comments.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, UserRole, MessageStatus, FakeMessagePrefix } from 'im.v2.const';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type {\n\tRecentRestResult,\n\tRawUser,\n\tRawChat,\n\tRawRecentItem,\n\tRawMessage,\n\tRawCopilot,\n} from '../../types/rest';\n\ntype RecentFile = {\n\tid: number,\n\tname: string,\n\ttype: string,\n};\n\ntype ExtractionResult = {\n\tusers: RawUser[],\n\tchats: RawChat[],\n\tmessages: RawMessage[],\n\tfiles: RecentFile[],\n\trecentItems: RawRecentItem[],\n\tcopilot?: RawCopilot,\n};\n\nexport class RecentDataExtractor\n{\n\t#restResult: RecentRestResult;\n\t#withBirthdays: boolean;\n\n\t#users: { [id: string]: RawUser } = {};\n\t#chats: { [id: string]: RawChat } = {};\n\t#messages: { [id: string]: RawMessage } = {};\n\t#files: { [id: string]: RecentFile } = {};\n\t#recentItems: { [id: string]: RawRecentItem } = {};\n\n\tconstructor(params: { rawData: RecentRestResult, withBirthdays?: boolean })\n\t{\n\t\tconst { rawData, withBirthdays = true } = params;\n\t\tthis.#withBirthdays = withBirthdays;\n\t\tthis.#restResult = rawData;\n\t}\n\n\tgetItems(): ExtractionResult\n\t{\n\t\tconst { items = [], copilot } = this.#restResult;\n\t\titems.forEach((item: RawRecentItem) => {\n\t\t\tthis.#extractUser(item);\n\t\t\tthis.#extractChat(item);\n\t\t\tthis.#extractMessage(item);\n\t\t\tthis.#extractRecentItem(item);\n\t\t});\n\n\t\tthis.#extractBirthdayItems();\n\n\t\treturn {\n\t\t\tusers: Object.values(this.#users),\n\t\t\tchats: Object.values(this.#chats),\n\t\t\tmessages: Object.values(this.#messages),\n\t\t\tfiles: Object.values(this.#files),\n\t\t\trecentItems: Object.values(this.#recentItems),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#extractUser(item: RawRecentItem)\n\t{\n\t\tif (item.user?.id && !this.#users[item.user.id])\n\t\t{\n\t\t\tthis.#users[item.user.id] = item.user;\n\t\t}\n\t}\n\n\t#extractChat(item: RawRecentItem)\n\t{\n\t\tif (item.chat)\n\t\t{\n\t\t\tthis.#chats[item.id] = this.#prepareGroupChat(item);\n\n\t\t\tif (item.user.id && !this.#chats[item.user.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForAdditionalUser(item.user);\n\t\t\t}\n\t\t}\n\t\telse if (item.user.id)\n\t\t{\n\t\t\tconst existingRecentItem = Core.getStore().getters['recent/get'](item.user.id);\n\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForUser(item);\n\t\t\t}\n\t\t}\n\t}\n\n\t#extractMessage(item: RawRecentItem): void\n\t{\n\t\tconst message = item.message;\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (message.id === 0)\n\t\t{\n\t\t\tmessage.id = `${FakeMessagePrefix}-${item.id}`;\n\t\t}\n\n\t\tlet viewedByOthers = false;\n\t\tif (message.status === MessageStatus.delivered)\n\t\t{\n\t\t\tviewedByOthers = true;\n\t\t}\n\n\t\tif (Type.isPlainObject(message.file))\n\t\t{\n\t\t\tconst file: RecentFile = message.file;\n\t\t\tmessage.files = [file.id];\n\n\t\t\tconst existingFile = Core.getStore().getters['files/get'](file.id);\n\t\t\t// recent has shortened file format, we should not rewrite file if model has it\n\t\t\tif (!existingFile)\n\t\t\t{\n\t\t\t\tthis.#files[file.id] = file;\n\t\t\t}\n\t\t}\n\n\t\tconst existingMessage: ImModelMessage = Core.getStore().getters['messages/getById'](message.id);\n\t\t// recent has shortened attach format, we should not rewrite attach if model has it\n\t\tif (Type.isArrayFilled(existingMessage?.attach))\n\t\t{\n\t\t\tdelete message.attach;\n\t\t}\n\n\t\tthis.#messages[message.id] = { ...message, viewedByOthers };\n\t}\n\n\t#extractRecentItem(item: RawRecentItem): void\n\t{\n\t\tconst messageId = item.message?.id ?? 0;\n\t\tthis.#recentItems[item.id] = { ...item, messageId };\n\t}\n\n\t#extractBirthdayItems()\n\t{\n\t\tif (!this.#withBirthdays)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { birthdayList = [] } = this.#restResult;\n\t\tbirthdayList.forEach((item) => {\n\t\t\tif (!this.#users[item.id])\n\t\t\t{\n\t\t\t\tthis.#users[item.id] = item;\n\t\t\t}\n\n\t\t\tif (!this.#chats[item.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.id] = this.#prepareChatForAdditionalUser(item);\n\t\t\t}\n\n\t\t\tif (!this.#recentItems[item.id])\n\t\t\t{\n\t\t\t\tconst messageId = `${FakeMessagePrefix}-${item.id}`;\n\t\t\t\tthis.#recentItems[item.id] = { ...this.#getBirthdayPlaceholder(item), messageId };\n\t\t\t\tthis.#messages[messageId] = { id: messageId };\n\t\t\t}\n\t\t});\n\t}\n\n\t#prepareGroupChat(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id,\n\t\t\tcopilot: item.copilot,\n\t\t};\n\t}\n\n\t#prepareChatForUser(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: ChatType.user,\n\t\t\tcounter: item.counter,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#prepareChatForAdditionalUser(user: RawUser): RawChat\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: ChatType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#getBirthdayPlaceholder(item: RawRecentItem): { id: string, isBirthdayPlaceholder: true }\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\tisBirthdayPlaceholder: true,\n\t\t};\n\t}\n}\n","import { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { CopilotManager } from 'im.v2.lib.copilot';\n\nimport { RecentDataExtractor } from './classes/recent-data-extractor';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tdataIsPreloaded: boolean = false;\n\tfirstPageIsLoaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn Core.getStore().getters['recent/getRecentCollection'];\n\t}\n\n\tasync loadFirstPage({ ignorePreloadedItems = false } = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn('Im.RecentList: first page was preloaded');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\tconst result = await this.requestItems({ firstPage: true });\n\t\tthis.firstPageIsLoaded = true;\n\n\t\treturn result;\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn('Im.RecentList: setting preloaded data', params);\n\t\tconst { items, hasMore } = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId): void\n\t{\n\t\tLogger.warn('Im.RecentList: hide chat', dialogId);\n\t\tconst recentItem = Core.getStore().getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = Core.getStore().getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tCore.getRestClient().callMethod(RestMethod.imRecentHide, { DIALOG_ID: dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t\t});\n\t}\n\t// endregion public\n\n\tasync requestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\tconst result = await Core.getRestClient().callMethod(this.getQueryMethod(), queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t\t});\n\n\t\tthis.pagesLoaded++;\n\t\tLogger.warn(`Im.RecentList: ${firstPage ? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\tconst { items, hasMore } = result.data();\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.isLoading = false;\n\n\t\treturn this.updateModels(result.data());\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): JsonObject\n\t{\n\t\treturn {\n\t\t\tSKIP_OPENLINES: 'Y',\n\t\t\tLIMIT: this.itemsPerPage,\n\t\t\tLAST_MESSAGE_DATE: firstPage ? null : this.lastMessageDate,\n\t\t\tGET_ORIGINAL_TEXT: 'Y',\n\t\t\tPARSE_TEXT: 'Y',\n\t\t};\n\t}\n\n\tgetModelSaveMethod(): string\n\t{\n\t\treturn 'recent/setRecent';\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst extractor = new RecentDataExtractor({ rawData, ...this.getExtractorOptions() });\n\t\tconst extractedItems = extractor.getItems();\n\t\tconst {\n\t\t\tusers,\n\t\t\tchats,\n\t\t\tmessages,\n\t\t\tfiles,\n\t\t\trecentItems,\n\t\t\tcopilot,\n\t\t} = extractedItems;\n\t\tLogger.warn('RecentService: prepared data for models', extractedItems);\n\n\t\tconst usersPromise = Core.getStore().dispatch('users/set', users);\n\t\tconst dialoguesPromise = Core.getStore().dispatch('chats/set', chats);\n\t\tconst messagesPromise = Core.getStore().dispatch('messages/store', messages);\n\t\tconst filesPromise = Core.getStore().dispatch('files/set', files);\n\t\tconst recentPromise = Core.getStore().dispatch(this.getModelSaveMethod(), recentItems);\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleRecentListResponse(copilot);\n\n\t\treturn Promise.all([\n\t\t\tusersPromise,\n\t\t\tdialoguesPromise,\n\t\t\tmessagesPromise,\n\t\t\tfilesPromise,\n\t\t\trecentPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n\n\tgetExtractorOptions(): { withBirthdays?: boolean }\n\t{\n\t\treturn {};\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawCommentInfo,\n\tRawPin,\n\tRawReaction,\n\tRawCopilot,\n} from '../../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#restResult.chat.dialogId;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.lines;\n\t}\n\n\tisCopilotChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.copilot;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetCommentInfo(): RawCommentInfo[]\n\t{\n\t\treturn this.#restResult.commentInfo ?? [];\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n\n\tgetCopilot(): RawCopilot\n\t{\n\t\treturn this.#restResult.copilot;\n\t}\n}\n","import { Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, Layout } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Utils } from 'im.v2.lib.utils';\nimport { CopilotManager } from 'im.v2.lib.copilot';\n\nimport { ChatDataExtractor } from './chat-data-extractor';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { ChatLoadRestResult, CommentInfoRestResult } from '../../types/rest';\n\ntype UpdateModelsResult = {\n\tdialogId: string,\n\tchatId: number,\n};\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\tasync loadComments(postId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tpostId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t\tautoJoin: true,\n\t\t\tcreateIfNotExists: true,\n\t\t};\n\n\t\tconst { chatId } = await this.#requestChat(RestMethod.imV2ChatLoad, params);\n\n\t\treturn this.#store.dispatch('messages/comments/set', {\n\t\t\tmessageId: postId,\n\t\t\tchatId,\n\t\t});\n\t}\n\n\tasync loadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](channelDialogId, true);\n\t\tconst messages = this.#store.getters['messages/getByChatId'](dialog.chatId);\n\t\tconst messageIds = messages.map((message: ImModelMessage) => message.id);\n\t\tconst { commentInfo, usersShort }: CommentInfoRestResult = await runAction(\n\t\t\tRestMethod.imV2ChatMessageCommentInfoList,\n\t\t\t{ data: { messageIds } },\n\t\t)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading comment info', error);\n\t\t\t});\n\n\t\tconst userManager = new UserManager();\n\n\t\tvoid this.#store.dispatch('messages/comments/set', commentInfo);\n\t\tvoid userManager.addUsersToModel(usersShort);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId, true);\n\t\tthis.#store.dispatch('messages/clearChatCollection', { chatId: dialog.chatId });\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\t}\n\n\tasync #requestChat(actionName: string, params: Object<string, any>): Promise<{ dialogId: string, chatId: number }>\n\t{\n\t\tconst { dialogId, messageId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\tconst actionResult = await runAction(actionName, { data: params })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', error);\n\t\t\t\tthis.#markDialogAsNotLoaded(dialogId);\n\t\t\t\tthrow error;\n\t\t\t});\n\n\t\tif (this.#needLayoutRedirect(actionResult))\n\t\t{\n\t\t\treturn this.#redirectToLayout(actionResult, messageId);\n\t\t}\n\n\t\tconst {\n\t\t\tdialogId: loadedDialogId,\n\t\t\tchatId,\n\t\t} = await this.#updateModels(actionResult);\n\n\t\tif (this.#isDialogLoadedMarkNeeded(actionName))\n\t\t{\n\t\t\tawait this.#markDialogAsLoaded(loadedDialogId);\n\t\t}\n\n\t\treturn { dialogId: loadedDialogId, chatId };\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsNotLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#isDialogLoadedMarkNeeded(actionName: string): boolean\n\t{\n\t\treturn actionName !== RestMethod.imV2ChatShallowLoad;\n\t}\n\n\tasync #updateModels(restResult: ChatLoadRestResult): Promise<UpdateModelsResult>\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\n\t\tconst chatsPromise = this.#store.dispatch('chats/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t\tthis.#store.dispatch('messages/comments/set', extractor.getCommentInfo()),\n\t\t]);\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleChatLoadResponse(extractor.getCopilot());\n\n\t\tawait Promise.all([\n\t\t\tchatsPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\n\t\treturn { dialogId: extractor.getDialogId(), chatId: extractor.getChatId() };\n\t}\n\n\t#needLayoutRedirect(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\treturn this.#needRedirectToCopilotLayout(actionResult) || this.#needRedirectToOpenLinesLayout(actionResult);\n\t}\n\n\t#redirectToLayout(actionResult: ChatLoadRestResult, contextId: number = 0): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tLayoutManager.getInstance().setLastOpenedElement(Layout.chat.name, '');\n\n\t\tif (this.#needRedirectToCopilotLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openCopilot(extractor.getDialogId(), contextId);\n\t\t}\n\n\t\tif (this.#needRedirectToOpenLinesLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openLines(extractor.getDialogId());\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#needRedirectToCopilotLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tconst currentLayoutName = LayoutManager.getInstance().getLayout().name;\n\n\t\treturn extractor.isCopilotChat() && currentLayoutName !== Layout.copilot.name;\n\t}\n\n\t#needRedirectToOpenLinesLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\n\t\treturn extractor.isOpenlinesChat() && Type.isStringFilled(extractor.getDialogId());\n\t}\n}\n","import { Type } from 'main.core';\nimport { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ChatConfig, RestChatConfig } from '../types/chat';\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync createChat(chatConfig: ChatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst createResult: RestResult = await this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: preparedFields,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult.data();\n\n\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addChatToModel(newDialogId, preparedFields);\n\n\t\treturn { newDialogId, newChatId };\n\t}\n\n\tasync #prepareFields(chatConfig: ChatConfig): RestChatConfig\n\t{\n\t\tconst preparedConfig = { ...chatConfig };\n\t\tif (preparedConfig.avatar)\n\t\t{\n\t\t\tpreparedConfig.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tpreparedConfig.managers = preparedConfig.managers ?? [];\n\t\tpreparedConfig.members = preparedConfig.members ?? [];\n\t\tconst allMembers = [...preparedConfig.members, ...preparedConfig.managers];\n\t\tif (preparedConfig.ownerId)\n\t\t{\n\t\t\tallMembers.push(preparedConfig.ownerId);\n\t\t}\n\t\tpreparedConfig.members = [...new Set(allMembers)];\n\n\t\tconst result = {\n\t\t\ttype: preparedConfig.type?.toUpperCase(),\n\t\t\tentityType: preparedConfig.entityType?.toUpperCase(),\n\t\t\ttitle: preparedConfig.title,\n\t\t\tavatar: preparedConfig.avatar,\n\t\t\tdescription: preparedConfig.description,\n\t\t\tusers: preparedConfig.members,\n\t\t\tmanagers: preparedConfig.managers,\n\t\t\townerId: preparedConfig.ownerId,\n\t\t\tsearchable: preparedConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUsersAdd: preparedConfig.manageUsersAdd,\n\t\t\tmanageUsersDelete: preparedConfig.manageUsersDelete,\n\t\t\tmanageUi: preparedConfig.manageUi,\n\t\t\tmanageSettings: preparedConfig.manageSettings,\n\t\t\tmanageMessages: preparedConfig.manageMessages,\n\t\t\tconferencePassword: preparedConfig.conferencePassword,\n\t\t\tcopilotMainRole: preparedConfig.copilotMainRole,\n\t\t};\n\n\t\tObject.entries(result).forEach(([key, value]) => {\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tdelete result[key];\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: RestChatConfig)\n\t{\n\t\tlet chatType = chatConfig.searchable === 'Y' ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tif (Type.isStringFilled(chatConfig.entityType))\n\t\t{\n\t\t\tchatType = chatConfig.entityType.toLowerCase();\n\t\t}\n\n\t\tif (Type.isStringFilled(chatConfig.type))\n\t\t{\n\t\t\tchatType = chatConfig.type.toLowerCase();\n\t\t}\n\n\t\tthis.#store.dispatch('chats/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.users.length,\n\t\t\trole: UserRole.owner,\n\t\t\tpermissions: {\n\t\t\t\tmanageUi: chatConfig.manageUi,\n\t\t\t\tmanageSettings: chatConfig.manageSettings,\n\t\t\t\tmanageUsersAdd: chatConfig.manageUsersAdd,\n\t\t\t\tmanageUsersDelete: chatConfig.manageUsersDelete,\n\t\t\t\tmanageMessages: chatConfig.manageMessages,\n\t\t\t},\n\t\t});\n\t}\n}\n","import { isResizableImage, resizeImage } from 'ui.uploader.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Utils } from 'im.v2.lib.utils';\n\nexport class UpdateService\n{\n\tasync prepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\tif (!isResizableImage(avatarFile))\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\treturn Promise.reject(new Error('UpdateService: prepareAvatar: incorrect image'));\n\t\t}\n\n\t\tconst MAX_AVATAR_SIZE = 180;\n\t\tconst { preview: resizedAvatar } = await resizeImage(avatarFile, {\n\t\t\twidth: MAX_AVATAR_SIZE,\n\t\t\theight: MAX_AVATAR_SIZE,\n\t\t});\n\n\t\treturn resizedAvatar;\n\t}\n\n\tasync changeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\tLogger.warn('ChatService: changeAvatar', chatId, avatarFile);\n\t\tconst avatarInBase64 = await Utils.file.getBase64(avatarFile);\n\n\t\treturn runAction(RestMethod.imV2ChatUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tfields: { avatar: avatarInBase64 },\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: changeAvatar error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName,\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { name: title },\n\t\t});\n\t}\n}\n","import { Runtime } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tconst DEBOUNCE_TIME = 500;\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('chats/mute', { dialogId });\n\t\tconst queryParams = { dialog_id: dialogId, action: 'Y' };\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('chats/unmute', { dialogId });\n\t\tconst queryParams = { dialog_id: dialogId, action: 'N' };\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst { dialog_id: dialogId, action } = queryParams;\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch((error) => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\n\t\t\tconst actionType = action === 'Y' ? 'chats/unmute' : 'chats/mute';\n\t\t\tthis.#store.dispatch(actionType, { dialogId });\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tconst queryParams = { DIALOG_ID: dialogId, ACTION: 'Y' };\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', { id: dialogId, action: false });\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tconst queryParams = { DIALOG_ID: dialogId, ACTION: 'N' };\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', { id: dialogId, action: true });\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<number>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('chats/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { counter: 0 },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\t\tthis.#store.dispatch('recent/unread', { id: dialogId, action: false });\n\t\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([rawChatId, messageIds]) => {\n\t\t\t\tthis.#readMessagesForChat(rawChatId, messageIds);\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tasync #readMessagesForChat(rawChatId: string, messageIds: Set<number>)\n\t{\n\t\tconst queueChatId = Number.parseInt(rawChatId, 10);\n\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\tif (messageIds.size === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copiedMessageIds = [...messageIds];\n\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\tconst readMessagesCount = await this.#readMessageOnClient(queueChatId, copiedMessageIds);\n\n\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\tawait this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\n\t\tconst readResult = await this.#readMessageOnServer(queueChatId, copiedMessageIds)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t});\n\n\t\tthis.#checkChatCounter(readResult);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && !recentItem?.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: 'Y',\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds,\n\t\t});\n\t}\n\n\t#decreaseCommentCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\tconst counters = {\n\t\t\t[chat.parentChatId]: {\n\t\t\t\t[chatId]: newCounter,\n\t\t\t},\n\t\t};\n\n\t\treturn Core.getStore().dispatch('counters/setCommentCounters', counters);\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tif (chat.type === ChatType.comment)\n\t\t{\n\t\t\treturn this.#decreaseCommentCounter(chatId, readMessagesCount);\n\t\t}\n\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tfields: { counter: newCounter },\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst { chatId, counter } = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: { counter },\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory,\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: kick user ${userId} from chat ${dialogId}`);\n\t\tconst queryParams = { dialogId, userId };\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error kicking user from chat', error);\n\t\t});\n\t}\n\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.kickUserFromChat(dialogId, Core.getUserId());\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: false,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tLogger.warn(`UserService: join chat ${dialogId}`);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\trole: UserRole.member,\n\t\t\t},\n\t\t});\n\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatJoin, {\n\t\t\tdialogId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error joining chat', error);\n\t\t});\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: add manager ${userId} to ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = [...managerList, userId];\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatAddManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: add manager error', error);\n\t\t\t});\n\t}\n\n\tremoveManager(dialogId: string, userId: number): void\n\t{\n\t\tLogger.warn(`UserService: remove manager ${userId} from ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (!managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = managerList.filter((managerId) => managerId !== userId);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatDeleteManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: remove manager error', error);\n\t\t\t});\n\t}\n}\n","import { LoadService } from './classes/load';\nimport { CreateService } from './classes/create';\nimport { UpdateService } from './classes/update';\nimport { RenameService } from './classes/rename';\nimport { MuteService } from './classes/mute';\nimport { PinService } from './classes/pin';\nimport { ReadService } from './classes/read';\nimport { UserService } from './classes/user';\n\nexport class ChatService\n{\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#updateService: UpdateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tloadComments(postId: number): Promise\n\t{\n\t\treturn this.#loadService.loadComments(postId);\n\t}\n\n\tloadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadCommentInfo(channelDialogId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.resetChat(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'update'\n\tprepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\treturn this.#updateService.prepareAvatar(avatarFile);\n\t}\n\n\tchangeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\treturn this.#updateService.changeAvatar(chatId, avatarFile);\n\t}\n\t// endregion 'update'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tthis.#userService.joinChat(dialogId);\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.addManager(dialogId, userId);\n\t}\n\n\tremoveManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.removeManager(dialogId, userId);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#updateService = new UpdateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { callBatch, runAction } from 'im.v2.lib.rest';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { CopilotManager } from 'im.v2.lib.copilot';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { PaginationRestResult } from '../types/message';\nimport type { RawMessage, RawCommentInfo } from '../../types/rest';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: RawMessage[] = [];\n\t#preparedUnreadMessages: RawMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = { ...result, hasPrevPage, hasNextPage: null };\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tasync loadFirstPage(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadFirstPage for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t\torder: { id: 'ASC' },\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageTail, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadFirstPage error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadFirstPage result', restResult);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tawait this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage: false,\n\t\t\t\thasNextPage: restResult.hasNextPage,\n\t\t\t},\n\t\t});\n\t\tthis.#isLoading = false;\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId],\n\t\t\t},\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\n\t\treturn callBatch(query)\n\t\t\t.then((data) => {\n\t\t\t\tLogger.warn('MessageService: loadContext result', data);\n\n\t\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadContext error:', error);\n\t\t\t\tthrow new Error(error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\t}\n\n\tasync loadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\tconst queryParams = {\n\t\t\tdata: { commentChatId: chatId },\n\t\t};\n\t\tconst result = await runAction(RestMethod.imV2ChatMessageGetContext, queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\t});\n\n\t\tconst commentInfo: RawCommentInfo[] = result.commentInfo;\n\t\tconst targetCommentInfo: ?RawCommentInfo = commentInfo.find((item) => {\n\t\t\treturn item.chatId === chatId;\n\t\t});\n\t\tconst targetMessageId = targetCommentInfo?.messageId;\n\n\t\tLogger.warn('MessageService: loadContextByChatId result', result);\n\t\tvoid this.#handleLoadedMessages(result);\n\n\t\treturn targetMessageId;\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().chatId <= 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId)\n\t\t\t\t.catch(() => {})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages()\n\t\t\t.catch(() => {})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t}\n\n\tasync loadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageList, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages result', restResult);\n\t\trestResult.messages = this.#prepareInitialMessages(restResult.messages);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tthis.#isLoading = false;\n\t}\n\n\t#prepareInitialMessages(rawMessages: RawMessage[]): RawMessage[]\n\t{\n\t\tif (rawMessages.length === 0)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst lastMessageId = this.#getDialog().lastMessageId;\n\t\tconst newMaxId = Math.max(...rawMessages.map((message) => message.id));\n\t\tif (newMaxId >= lastMessageId)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst messagesCollection: ImModelMessage[] = this.#store.getters['messages/getByChatId'](this.#chatId);\n\t\tconst additionalMessages = messagesCollection.filter((message) => {\n\t\t\treturn message.id > newMaxId;\n\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages: local id is higher than server one', additionalMessages);\n\n\t\treturn [...rawMessages, ...additionalMessages];\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst { messages } = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true,\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: PaginationRestResult): Promise\n\t{\n\t\tconst {\n\t\t\tfiles,\n\t\t\tusers,\n\t\t\tusersShort,\n\t\t\treactions,\n\t\t\thasPrevPage,\n\t\t\thasNextPage,\n\t\t\tadditionalMessages,\n\t\t\tcommentInfo,\n\t\t\tcopilot,\n\t\t} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage,\n\t\t\t},\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort),\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\t\tconst additionalMessagesPromise = this.#store.dispatch('messages/store', additionalMessages);\n\t\tconst commentInfoPromise = this.#store.dispatch('messages/comments/set', commentInfo);\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleChatLoadResponse(copilot);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\treactionsPromise,\n\t\t\tadditionalMessagesPromise,\n\t\t\tcommentInfoPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag,\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields,\n\t\t});\n\t}\n\n\t#getDialog(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, { id: messageId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\t\tchatId,\n\t\t\t\t\tmessageId,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, { id: messageId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\t\tchatId,\n\t\t\t\t\tmessageId,\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\nexport class EditService\n{\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tconst message = this.#getMessage(messageId);\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateMessageModel(messageId, text);\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tid: messageId,\n\t\t\t\tfields: { message: text },\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatMessageUpdate, payload)\n\t\t\t.catch((error) => {\n\t\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t\t});\n\t}\n\n\t#updateMessageModel(messageId: number, text: string): void\n\t{\n\t\tconst message = this.#getMessage(messageId);\n\t\tconst isEdited = message.viewedByOthers;\n\n\t\tCore.getStore().dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited,\n\t\t\t},\n\t\t});\n\t}\n\n\t#getMessage(messageId: number): ImModelMessage | null\n\t{\n\t\treturn Core.getStore().getters['messages/getById'](messageId);\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { RestMethod, EventType, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\n\nimport type { ImModelChat, ImModelMessage, ImModelRecentItem } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync deleteMessage(messageId: number | string)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\n\t\tif (Utils.text.isUuidV4(messageId))\n\t\t{\n\t\t\tthis.#deleteTemporaryMessage(messageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#sendDeleteEvent(messageId);\n\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (this.#canDeleteCompletely(message))\n\t\t{\n\t\t\tvoid this.#completeMessageDelete(message);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#shallowMessageDelete(message);\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#canDeleteCompletely(message: ImModelMessage): boolean\n\t{\n\t\tconst alwaysCompleteDeleteChats = [ChatType.channel, ChatType.openChannel];\n\t\tconst neverCompleteDeleteChats = [ChatType.comment];\n\n\t\tconst chat = this.#getChat();\n\t\tif (alwaysCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (neverCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !message.viewedByOthers;\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (message.id === chat.lastMessageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(message.id);\n\t\t\tthis.#updateRecentForCompleteDelete(newLastId);\n\t\t\tthis.#updateChatForCompleteDelete(newLastId);\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#updateRecentForCompleteDelete(newLastId: number)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (!newLastId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/delete', { id: chat.dialogId });\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: chat.dialogId,\n\t\t\tfields: { messageId: newLastId },\n\t\t});\n\t}\n\n\t#updateChatForCompleteDelete(newLastId)\n\t{\n\t\tconst chat = this.#getChat();\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: chat.dialogId,\n\t\t\tfields: {\n\t\t\t\tlastMessageId: newLastId,\n\t\t\t\tlastId: newLastId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\tdialogId: chat.dialogId,\n\t\t});\n\t}\n\n\t#deleteMessageOnServer(messageId: number): Promise\n\t{\n\t\treturn runAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n\n\t#deleteTemporaryMessage(messageId: string)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](chat.dialogId);\n\t\tif (recentItem.messageId === messageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(messageId);\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: chat.dialogId,\n\t\t\t\tfields: { messageId: newLastId },\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: messageId,\n\t\t});\n\t}\n\n\t#getPreviousMessageId(messageId: number): number\n\t{\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId,\n\t\t\tchatId: this.#chatId,\n\t\t});\n\n\t\treturn previousMessage?.id ?? 0;\n\t}\n\n\t#sendDeleteEvent(messageId: number)\n\t{\n\t\tEventEmitter.emit(EventType.dialog.onMessageDeleted, { messageId });\n\t}\n\n\t#getChat(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst { dialogId } = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { markedId: messageId },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}\n","import { Loc } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS'),\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}\n","import { LoadService } from './classes/load';\nimport { PinService } from './classes/pin';\nimport { EditService } from './classes/edit';\nimport { DeleteService } from './classes/delete';\nimport { MarkService } from './classes/mark';\nimport { FavoriteService } from './classes/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst { chatId } = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService();\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\n\tloadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\treturn this.#loadService.loadContextByChatId(chatId);\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\treturn this.#loadService.loadFirstPage();\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number | string): Promise\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction, type RunActionError } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\nimport { EventType, RestMethod, DialogScrollThreshold, ChatType } from 'im.v2.const';\n\nimport { MessageService } from '../registry';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\ntype BaseMessageParams = {\n\tdialogId: string,\n\ttext: string,\n\ttempMessageId?: string,\n};\n\ntype PlainMessageParams = BaseMessageParams & {\n\treplyId?: number,\n\tforwardIds?: number[],\n};\n\ntype CopilotMessageParams = BaseMessageParams & {\n\tcopilot: {\n\t\tpromptCode: string,\n\t},\n};\n\ntype FileMessageParams = BaseMessageParams & {\n\tfileIds: string[],\n};\n\ntype PreparedMessage = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\treplyId: number,\n\tforward: {userId: number, id: string},\n\tforwardIds: {[string]: number},\n\ttext: string,\n\tparams: JsonObject,\n\tcopilot: JsonObject,\n\tunread: boolean,\n\tsending: boolean,\n\tviewedByOthers: boolean,\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\n\tstatic instance: SendingService = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync sendMessage(params: PlainMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage', params);\n\t\tconst message = this.#prepareMessage(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync sendMessageWithFiles(params: FileMessageParams): Promise\n\t{\n\t\tconst { text = '', fileIds = [] } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isArrayFilled(fileIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage with files', params);\n\t\tconst message = this.#prepareMessageWithFiles(params);\n\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync forwardMessages(params: PlainMessageParams): Promise\n\t{\n\t\tconst { forwardIds, dialogId, text } = params;\n\t\tif (!Type.isArrayFilled(forwardIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tLogger.warn('SendingService: forwardMessages', params);\n\n\t\tawait this.#handlePagination(dialogId);\n\n\t\tlet commentMessage = null;\n\t\tif (Type.isStringFilled(text))\n\t\t{\n\t\t\tcommentMessage = this.#prepareMessage(params);\n\t\t\tawait this.#addMessageToModels(commentMessage);\n\t\t}\n\n\t\tconst forwardUuidMap = this.#getForwardUuidMap(forwardIds);\n\t\tconst forwardedMessages = this.#prepareForwardMessages(params, forwardUuidMap);\n\n\t\tawait this.#addForwardsToModels(forwardedMessages);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\ttry\n\t\t{\n\t\t\tconst requestParams = this.#prepareSendForwardRequest({ forwardUuidMap, commentMessage, dialogId });\n\t\t\tconst response = await this.#sendMessageToServer(requestParams);\n\t\t\tLogger.warn('SendingService: forwardMessage result -', response);\n\t\t\tthis.#handleForwardMessageResponse({ response, dialogId, commentMessage });\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tthis.#handleForwardMessageError({ commentMessage, forwardUuidMap });\n\t\t\tthis.#logSendErrors(errors, 'forwardMessage');\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync retrySendMessage(params: { tempMessageId: string, dialogId: string }): Promise\n\t{\n\t\tconst { tempMessageId, dialogId } = params;\n\t\tconst unsentMessage: ImModelMessage = this.#store.getters['messages/getById'](tempMessageId);\n\t\tif (!unsentMessage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#removeMessageError(tempMessageId);\n\t\tconst message = this.#prepareMessage({\n\t\t\ttext: unsentMessage.text,\n\t\t\tdialogId,\n\t\t\ttempMessageId: unsentMessage.id,\n\t\t\treplyId: unsentMessage.replyId,\n\t\t});\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync sendCopilotPrompt(params: CopilotMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendCopilotPrompt', params);\n\t\tconst message = this.#preparePrompt(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync #processMessageSending(message: PreparedMessage): Promise\n\t{\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync #handleAddingMessageToModels(message)\n\t{\n\t\tawait this.#handlePagination(message.dialogId);\n\t\tawait this.#addMessageToModels(message);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId: message.dialogId });\n\t}\n\n\tasync #sendAndProcessMessage(message: PreparedMessage): Promise\n\t{\n\t\tconst sendResult = await this.#sendMessageToServer(message)\n\t\t\t.catch((errors) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\tthis.#logSendErrors(errors, 'sendAndProcessMessage');\n\t\t\t});\n\n\t\tLogger.warn('SendingService: sendAndProcessMessage result -', sendResult);\n\t\tconst { id } = sendResult;\n\t\tif (!id)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#updateModels({\n\t\t\toldId: message.temporaryId,\n\t\t\tnewId: id,\n\t\t\tdialogId: message.dialogId,\n\t\t});\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#prepareMessage(params: PlainMessageParams): PreparedMessage\n\t{\n\t\tconst { text, tempMessageId, dialogId, replyId, forwardIds } = params;\n\n\t\tconst defaultFields = {\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t};\n\n\t\treturn {\n\t\t\ttext,\n\t\t\tdialogId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\ttemporaryId: tempMessageId ?? Utils.text.getUuidV4(),\n\t\t\treplyId,\n\t\t\tforwardIds,\n\t\t\tviewedByOthers: this.#needToSetAsViewed(dialogId),\n\t\t\t...defaultFields,\n\t\t};\n\t}\n\n\t#prepareMessageWithFiles(params: FileMessageParams): PreparedMessage\n\t{\n\t\tconst { fileIds } = params;\n\t\tif (!Type.isArrayFilled(fileIds))\n\t\t{\n\t\t\tthrow new Error('SendingService: sendMessageWithFile: no fileId provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tparams: { FILE_ID: fileIds },\n\t\t};\n\t}\n\n\t#preparePrompt(params: CopilotMessageParams): PreparedMessage\n\t{\n\t\tconst { copilot } = params;\n\t\tif (!copilot || !copilot.promptCode)\n\t\t{\n\t\t\tthrow new Error('SendingService: preparePrompt: no code provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: PreparedMessage): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tvoid this.#store.dispatch('chats/clearLastMessageViews', { dialogId: message.dialogId });\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: PreparedMessage)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: { messageId: message.temporaryId },\n\t\t});\n\t}\n\n\t#sendMessageToServer(message: PreparedMessage): Promise\n\t{\n\t\tconst fields = {};\n\n\t\tif (message.replyId)\n\t\t{\n\t\t\tfields.replyId = message.replyId;\n\t\t}\n\n\t\tif (message.forwardIds)\n\t\t{\n\t\t\tfields.forwardIds = message.forwardIds;\n\t\t}\n\n\t\tif (message.text)\n\t\t{\n\t\t\tfields.message = message.text;\n\t\t\tfields.templateId = message.temporaryId;\n\t\t}\n\n\t\tif (message.copilot)\n\t\t{\n\t\t\tfields.copilot = message.copilot;\n\t\t}\n\n\t\tconst queryData = {\n\t\t\tdialogId: message.dialogId.toString(),\n\t\t\tfields,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageSend, { data: queryData });\n\t}\n\n\t#updateModels(params: { oldId: string, newId: number, dialogId: string })\n\t{\n\t\tconst { oldId, newId, dialogId } = params;\n\t\tvoid this.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: { id: newId },\n\t\t});\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: { messageId: newId },\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: { error: true },\n\t\t});\n\t}\n\n\t#removeMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\tsending: true,\n\t\t\t\terror: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId, true);\n\t}\n\n\t#getDialogByChatId(chatId: number): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId, true);\n\t}\n\n\t#needToSetAsViewed(dialogId: string): boolean\n\t{\n\t\treturn this.#store.getters['users/bots/isNetwork'](dialogId);\n\t}\n\n\t#handleForwardMessageResponse(params: { response: Object, dialogId: string, commentMessage: PreparedMessage })\n\t{\n\t\tconst { response, dialogId, commentMessage } = params;\n\t\tconst { id, uuidMap } = response;\n\n\t\tif (id)\n\t\t{\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: commentMessage.temporaryId,\n\t\t\t\tnewId: id,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t}\n\t\tObject.entries(uuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: uuid,\n\t\t\t\tnewId: messageId,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t});\n\t}\n\n\t#handleForwardMessageError({ commentMessage, forwardUuidMap })\n\t{\n\t\tif (commentMessage)\n\t\t{\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: commentMessage.temporaryId,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t}\n\n\t\tObject.keys(forwardUuidMap).forEach((uuid: string) => {\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: uuid,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareForwardMessages(params: PlainMessageParams, forwardUuidMap: {[string]: number}): PreparedMessage[]\n\t{\n\t\tconst { forwardIds, dialogId } = params;\n\t\tif (forwardIds.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst preparedMessages = [];\n\t\tObject.entries(forwardUuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\t\tif (!message)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreparedMessages.push({\n\t\t\t\t...this.#prepareMessage({ dialogId, text: message.text, tempMessageId: uuid, replyId: message.replyId }),\n\t\t\t\tforward: this.#prepareForwardParams(messageId),\n\t\t\t\tattach: message.attach,\n\t\t\t\tisDeleted: message.isDeleted,\n\t\t\t\tfiles: message.files,\n\t\t\t});\n\t\t});\n\n\t\treturn preparedMessages;\n\t}\n\n\t#prepareForwardParams(messageId: number): { id: string, userId: number, chatType: string, chatTitle: string }\n\t{\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tconst chat = this.#getDialogByChatId(message.chatId);\n\n\t\tconst isForward = this.#store.getters['messages/isForward'](messageId);\n\n\t\tconst userId = isForward ? message.forward.userId : message.authorId;\n\t\tconst chatType = isForward ? message.forward.chatType : chat.type;\n\t\tlet chatTitle = isForward ? message.forward.chatTitle : chat.name;\n\t\tif (chatType === ChatType.channel)\n\t\t{\n\t\t\tchatTitle = null;\n\t\t}\n\n\t\treturn {\n\t\t\tid: this.#buildForwardContextId(message.chatId, messageId),\n\t\t\tuserId,\n\t\t\tchatType,\n\t\t\tchatTitle,\n\t\t};\n\t}\n\n\t#prepareSendForwardRequest(params: {\n\t\tforwardUuidMap: { [string]: number },\n\t\tcommentMessage: ?PreparedMessage,\n\t\tdialogId: string\n\t}): { dialogId: string, forwardIds: { [string]: number }, text?: string, temporaryId?: string }\n\t{\n\t\tconst { dialogId, forwardUuidMap, commentMessage } = params;\n\n\t\tconst requestPrams = {\n\t\t\tdialogId,\n\t\t\tforwardIds: forwardUuidMap,\n\t\t};\n\n\t\tif (commentMessage)\n\t\t{\n\t\t\trequestPrams.text = commentMessage.text;\n\t\t\trequestPrams.temporaryId = commentMessage.temporaryId;\n\t\t}\n\n\t\treturn requestPrams;\n\t}\n\n\t#addForwardsToModels(forwardedMessages: PreparedMessage[]): Promise\n\t{\n\t\tconst addPromises = [];\n\t\tforwardedMessages.forEach((message) => {\n\t\t\taddPromises.push(this.#addMessageToModels(message));\n\t\t});\n\n\t\treturn Promise.all(addPromises);\n\t}\n\n\t#getForwardUuidMap(forwardIds: number[]): { [string]: number }\n\t{\n\t\tconst uuidMap = {};\n\t\tforwardIds.forEach((id) => {\n\t\t\tuuidMap[Utils.text.getUuidV4()] = id;\n\t\t});\n\n\t\treturn uuidMap;\n\t}\n\n\t#buildForwardContextId(chatId: number, messageId: number): string\n\t{\n\t\tconst dialogId = this.#getDialogByChatId(chatId).dialogId;\n\t\tif (dialogId.startsWith('chat'))\n\t\t{\n\t\t\treturn `${dialogId}/${messageId}`;\n\t\t}\n\n\t\tconst currentUser = Core.getUserId();\n\n\t\treturn `${dialogId}:${currentUser}/${messageId}`;\n\t}\n\n\t#logSendErrors(errors: RunActionError[], methodName: string)\n\t{\n\t\terrors.forEach((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`SendingService: ${methodName} error: code: ${error.code} message: ${error.message}`);\n\t\t});\n\t}\n}\n","import { Runtime, Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { NotificationTypesCodes, RestMethod } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { NotificationGetRestResult, NotificationItemRest } from './types/notification';\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({ firstPage: true });\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\t\tthis.store.dispatch('notifications/deleteFromSearch', { id: notificationId });\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\tNOTIFY_ID: notificationId,\n\t\t\tNOTIFY_VALUE: value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t}\n\n\tasync sendQuickAnswer(params)\n\t{\n\t\tconst { id, text, callbackSuccess = () => {}, callbackError = () => {} } = params;\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await this.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\t\tnotify_id: id,\n\t\t\t\tanswer_text: text,\n\t\t\t});\n\t\t\tcallbackSuccess(response);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t}\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', { id: idsToDelete })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\tLIMIT: this.limitPerPage,\n\t\t\tCONVERT_TEXT: 'Y',\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams],\n\t\t};\n\n\t\tif (firstPage)\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\t\telse\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn notifications.length < this.limitPerPage;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}\n","import { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({ chatId, fileId }): Promise\n\t{\n\t\tconst queryParams = { chat_id: chatId, file_id: fileId };\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = { file_id: fileId };\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}\n","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../types/uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n}\n\nconst MAX_FILES_IN_ONE_MESSAGE = 10;\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t\tonUploadComplete: 'onUploadComplete',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => {\n\t\t\t\treturn !file.getCustomData('sendAsFile') && file.getExtension() !== 'gif';\n\t\t\t},\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 720,\n\t\t\timagePreviewWidth: 720,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tignoreUnknownImageTypes: true,\n\t\t\tmaxFileSize: null,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onUploadComplete, { uploaderId });\n\t\t\t\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst firstTenTasks = tasks.slice(0, MAX_FILES_IN_ONE_MESSAGE);\n\n\t\tconst addedFiles = [];\n\t\tfirstTenTasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t\tsendAsFile: task.sendAsFile,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { getFilesFromDataTransfer, isFilePasted } from 'ui.uploader.core';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploader-wrapper';\nimport { SendingService } from '../registry';\n\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\nimport type { UploaderFile, UploaderError } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { RestClient } from 'rest.client';\nimport type {\n\tMessageWithFile,\n\tFileFromDisk,\n\tFileCommitParams,\n\tUploadFilesParams,\n\tUploadFromClipboardParams,\n\tUploadFromInputParams,\n\tUploadFromDragAndDrop,\n} from './types/uploading';\n\nexport class UploadingService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\t#sendingService: SendingService;\n\t#uploaderFilesRegistry: {\n\t\t[uploaderId: string]: {\n\t\t\tautoUpload: boolean,\n\t\t\twasSent: boolean,\n\t\t\ttext: string,\n\t\t\tdialogId: string,\n\t\t\ttempMessageId: string,\n\t\t\tfilesPreviewStatus: { [string]: boolean }\n\t\t}\n\t} = {};\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#sendingService = SendingService.getInstance();\n\t\tthis.#initUploader();\n\t}\n\n\tasync uploadFromClipboard(params: UploadFromClipboardParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { clipboardEvent, dialogId, autoUpload, imagesOnly } = params;\n\n\t\tconst { clipboardData } = clipboardEvent;\n\t\tif (!clipboardData || !isFilePasted(clipboardData))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tclipboardEvent.preventDefault();\n\n\t\tlet files: File[] = await getFilesFromDataTransfer(clipboardData);\n\t\tif (imagesOnly)\n\t\t{\n\t\t\tfiles = files.filter((file) => Utils.file.isImage(file.name));\n\t\t\tif (imagesOnly.length === 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\tconst { uploaderFiles, uploaderId } = await this.#addFiles({\n\t\t\tfiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t});\n\n\t\tif (uploaderFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn uploaderId;\n\t}\n\n\tasync uploadFromInput(params: UploadFromInputParams): Promise<string>\n\t{\n\t\tconst { event, sendAsFile, autoUpload, dialogId } = params;\n\t\tconst rawFiles = Object.values(event.target.files);\n\t\tif (rawFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tconst { uploaderId } = await this.#addFiles({\n\t\t\tfiles: rawFiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t\tsendAsFile,\n\t\t});\n\n\t\treturn uploaderId;\n\t}\n\n\tasync uploadFromDragAndDrop(params: UploadFromDragAndDrop): Promise<string>\n\t{\n\t\tconst { event, dialogId, autoUpload, sendAsFile } = params;\n\t\tevent.preventDefault();\n\n\t\tconst rawFiles = await getFilesFromDataTransfer(event.dataTransfer);\n\t\tif (rawFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tconst { uploaderId } = await this.#addFiles({\n\t\t\tfiles: rawFiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t\tsendAsFile,\n\t\t});\n\n\t\treturn uploaderId;\n\t}\n\n\t#createUploader(params: { dialogId: string, autoUpload: boolean }): Promise<string>\n\t{\n\t\tconst { dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t});\n\n\t\t\treturn uploaderId;\n\t\t});\n\t}\n\n\t#addFiles(params: UploadFilesParams): Promise<{uploaderFiles: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload, sendAsFile = false } = params;\n\n\t\treturn this.#createUploader({ dialogId, autoUpload }).then((uploaderId: string) => {\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst preparedFile = this.#prepareFileForUploader(file, dialogId, uploaderId, sendAsFile);\n\t\t\t\tfilesForUploader.push(preparedFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\t\t\tthis.#registerFiles(uploaderId, addedFiles, dialogId, autoUpload);\n\n\t\t\treturn {\n\t\t\t\tuploaderFiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = true;\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(files, dialogId)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#addFileFromDiskToModel(messageWithFile).then(() => {\n\t\t\t\tconst message = {\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileIds: [messageWithFile.tempFileId],\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t};\n\n\t\t\t\treturn this.#sendingService.sendMessageWithFiles(message);\n\t\t\t}).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t\tthis.#setReadyFilePreview(uploaderId, file.getId());\n\t\t\tthis.#tryToSendMessage(uploaderId);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, (event: BaseEvent) => {\n\t\t\tconst { file }: {file: UploaderFile} = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.wait);\n\t\t\tvoid this.#uploadPreview(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tthis.#setMessageError(file.getCustomData('tempMessageId'));\n\t\t\tthis.#showError(error);\n\t\t\tLogger.error('UploadingService: upload error', error);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onUploadComplete, (event: BaseEvent) => {\n\t\t\tconst { uploaderId } = event.getData();\n\t\t\tthis.commitMessage(uploaderId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('chats/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tthis.#setMessageError(tempMessageId);\n\t\t\tthis.#updateFileProgress(temporaryFileId, 0, FileStatus.error);\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\tcommitMessage(uploaderId: string)\n\t{\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\tconst fileIds = this.#uploaderWrapper.getFiles(uploaderId).map((file) => {\n\t\t\treturn file.getServerFileId().toString().slice(1);\n\t\t});\n\n\t\tconst sendAsFile = this.#uploaderWrapper.getFiles(uploaderId).every((file) => {\n\t\t\treturn file.getCustomData('sendAsFile');\n\t\t});\n\n\t\tvoid this.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: this.#uploaderFilesRegistry[uploaderId].text,\n\t\t\ttemplate_id: this.#uploaderFilesRegistry[uploaderId].tempMessageId,\n\t\t\t// file_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\tupload_id: fileIds,\n\t\t});\n\t}\n\n\t#uploadPreview(file: UploaderFile): Promise\n\t{\n\t\tif (\n\t\t\tthis.#getFileType(file.getBinary()) === FileType.file\n\t\t\t|| file.getExtension() === 'gif'\n\t\t)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\tfile.setCustomData('sendAsFile', true);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\treturn runAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareFileForUploader(file: File, dialogId: string, uploaderId, sendAsFile: boolean): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t\tsendAsFile,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tvoid this.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\tvoid this.#store.dispatch('files/delete', { id: tempFileId });\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\t\tconst asFile = file.getCustomData('sendAsFile');\n\n\t\tvoid this.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\tsize: file.getSize(),\n\t\t\ttype: asFile ? FileType.file : this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tif (file.getCustomData('sendAsFile'))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\tif (file.getClientPreview())\n\t\t{\n\t\t\tpreviewData.urlShow = URL.createObjectURL(file.getBinary());\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\t#registerFiles(uploaderId: string, files: UploaderFile[], dialogId: string, autoUpload: boolean)\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\tthis.#uploaderFilesRegistry[uploaderId] = {\n\t\t\t\tfilesPreviewStatus: {},\n\t\t\t\tdialogId,\n\t\t\t\ttext: '',\n\t\t\t\tautoUpload,\n\t\t\t};\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tconst fileId = file.getId();\n\t\t\tif (!this.#uploaderFilesRegistry[uploaderId].filesPreviewStatus)\n\t\t\t{\n\t\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus = {};\n\t\t\t}\n\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = false;\n\t\t});\n\t}\n\n\t#setReadyFilePreview(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = true;\n\t}\n\n\t#setMessagesText(uploaderId: string, text: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].text = text;\n\t}\n\n\t#setAutoUpload(uploaderId: string, autoUploadFlag: boolean)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = autoUploadFlag;\n\t}\n\n\t// we don't use it now, because we always send several files in ONE message\n\t// noinspection JSUnusedGlobalSymbols\n\tsendSeparateMessagesWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessages(uploaderId);\n\t}\n\n\tsendMessageWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessage(uploaderId);\n\t}\n\n\t#createMessagesFromFiles(uploaderId): {comment: {text: string, dialogId: string}, files: []}\n\t{\n\t\tconst messagesToSend = {\n\t\t\tcomment: {},\n\t\t\tfiles: [],\n\t\t};\n\n\t\tconst files = this.getFiles(uploaderId);\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.comment = { dialogId, text };\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tmessagesToSend.files.push({\n\t\t\t\tfileIds: [file.getId()],\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId,\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\treturn messagesToSend;\n\t}\n\n\t#createMessageFromFiles(uploaderId): {text: string, dialogId: string, tempMessageId: string, fileIds: []}\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tthis.#uploaderFilesRegistry[uploaderId].tempMessageId = tempMessageId;\n\n\t\tconst fileIds = [];\n\t\tconst files = this.getFiles(uploaderId);\n\t\tfiles.forEach((file) => {\n\t\t\tif (!file.getError())\n\t\t\t{\n\t\t\t\tfileIds.push(file.getId());\n\t\t\t}\n\t\t});\n\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\n\t\treturn {\n\t\t\tfileIds,\n\t\t\ttempMessageId,\n\t\t\tdialogId,\n\t\t\ttext,\n\t\t};\n\t}\n\n\t#readyToAddMessages(uploaderId): boolean\n\t{\n\t\tif (\n\t\t\t!this.#uploaderFilesRegistry[uploaderId]\n\t\t\t|| !this.#uploaderFilesRegistry[uploaderId].autoUpload\n\t\t\t|| this.#uploaderFilesRegistry[uploaderId].wasSent\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { filesPreviewStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(filesPreviewStatus).every((flag) => flag === true);\n\t}\n\n\t#tryToSendMessage(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\n\t\tconst message = this.#createMessageFromFiles(uploaderId);\n\t\tvoid this.#sendingService.sendMessageWithFiles(message);\n\t\tthis.start(uploaderId);\n\t}\n\n\t// we don't use it now, because we always send several files in ONE message\n\t// noinspection JSUnusedGlobalSymbols\n\t#tryToSendMessages(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\t\tconst { comment, files } = this.#createMessagesFromFiles(uploaderId);\n\t\tif (comment.text)\n\t\t{\n\t\t\tvoid this.#sendingService.sendMessage(comment);\n\t\t}\n\n\t\tfiles.forEach((message) => {\n\t\t\tvoid this.#sendingService.sendMessageWithFiles(message);\n\t\t});\n\t\tthis.start(uploaderId);\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\t#showError(error: UploaderError)\n\t{\n\t\tif (error.getCode() === 'MAX_FILE_SIZE_EXCEEDED')\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: `${error.getMessage()}<br>${error.getDescription()}`,\n\t\t\t});\n\t\t}\n\t}\n\n\t#setMessageError(tempMessageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: tempMessageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport class SettingsService\n{\n\tchangeSetting(settingName: string, value: any): Promise\n\t{\n\t\tLogger.warn('SettingsService: changeSetting', settingName, value);\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[settingName]: value,\n\t\t});\n\n\t\treturn runAction(RestMethod.imV2SettingsGeneralUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tname: settingName,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SettingsService: changeSetting error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class LinesService\n{\n\tasync getDialogIdByUserCode(userCode: string): Promise<string>\n\t{\n\t\tconst result = await Core.getRestClient().callMethod(RestMethod.linesDialogGet, {\n\t\t\tUSER_CODE: userCode,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('LinesService: error getting dialog id', error);\n\t\t});\n\n\t\tconst { dialog_id: dialogId } = result.data();\n\n\t\treturn dialogId;\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { ChatService } from '../registry';\n\nexport class CopilotService\n{\n\tasync createChat({ roleCode }: {roleCode: string}): Promise<string>\n\t{\n\t\tconst chatService = new ChatService();\n\t\tconst { newDialogId, newChatId } = await chatService.createChat({\n\t\t\ttype: ChatType.copilot,\n\t\t\tcopilotMainRole: roleCode,\n\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\tthis.#sendAnalytics({ chatId: newChatId, dialogId: newDialogId });\n\n\t\tawait chatService.loadChatWithMessages(newDialogId)\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\treturn newDialogId;\n\t}\n\n\t#onCreateError(error: Error)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Copilot chat create error', error);\n\t\tthrow new Error('Copilot chat create error');\n\t}\n\n\t#sendAnalytics({ chatId, dialogId })\n\t{\n\t\tAnalytics.getInstance().createChat({ chatId, dialogId });\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { runAction } from 'im.v2.lib.rest';\nimport { RestMethod } from 'im.v2.const';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nexport const CommentsService = {\n\tsubscribe(messageId: number): Promise\n\t{\n\t\tCore.getStore().dispatch('messages/comments/subscribe', messageId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentSubscribe, {\n\t\t\tdata: {\n\t\t\t\tpostId: messageId,\n\t\t\t\tcreateIfNotExists: true,\n\t\t\t\tautoJoin: true,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: subscribe error', error);\n\t\t});\n\t},\n\n\tunsubscribe(messageId: number): Promise\n\t{\n\t\tCore.getStore().dispatch('messages/comments/unsubscribe', messageId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentUnsubscribe, {\n\t\t\tdata: {\n\t\t\t\tpostId: messageId,\n\t\t\t\tcreateIfNotExists: true,\n\t\t\t\tautoJoin: true,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: unsubscribe error', error);\n\t\t});\n\t},\n\n\treadAllChannelComments(channelDialogId: string): Promise\n\t{\n\t\tconst chat: ImModelChat = Core.getStore().getters['chats/get'](channelDialogId, true);\n\t\tconst currentChannelCounter: number = Core.getStore().getters['counters/getChannelCommentsCounter'](chat.chatId);\n\t\tif (currentChannelCounter === 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tCore.getStore().dispatch('counters/readAllChannelComments', chat.chatId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentReadAll, {\n\t\t\tdata: { dialogId: channelDialogId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: readAllChannelComments error', error);\n\t\t});\n\t},\n};\n"],"names":["RecentDataExtractor","constructor","params","rawData","withBirthdays","getItems","items","copilot","forEach","item","users","Object","values","chats","messages","files","recentItems","user","id","chat","existingRecentItem","Core","getStore","getters","options","default_user_record","message","FakeMessagePrefix","viewedByOthers","status","MessageStatus","delivered","Type","isPlainObject","file","existingFile","existingMessage","isArrayFilled","attach","messageId","birthdayList","counter","dialogId","chatId","chat_id","avatar","color","name","type","ChatType","role","UserRole","member","isBirthdayPlaceholder","RecentService","dataIsPreloaded","firstPageIsLoaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","getInstance","instance","getCollection","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","result","requestItems","firstPage","loadNextPage","setPreloadedData","hasMore","getLastMessageDate","updateModels","hideChat","recentItem","dispatch","chatIsOpened","Messenger","openChat","getRestClient","callMethod","RestMethod","imRecentHide","DIALOG_ID","catch","error","console","queryParams","getQueryParams","getQueryMethod","data","imRecentList","SKIP_OPENLINES","LIMIT","LAST_MESSAGE_DATE","GET_ORIGINAL_TEXT","PARSE_TEXT","getModelSaveMethod","extractor","getExtractorOptions","extractedItems","usersPromise","dialoguesPromise","messagesPromise","filesPromise","recentPromise","copilotManager","CopilotManager","copilotPromise","handleRecentListResponse","all","length","slice","date","ChatDataExtractor","restResult","getChatId","getDialogId","isOpenlinesChat","lines","isCopilotChat","getChats","mainChat","hasPrevPage","hasNextPage","UserManager","getDialogForUser","getFiles","getUsers","getAdditionalUsers","usersShort","getMessages","getCommentInfo","commentInfo","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","push","getReactions","reactions","getCopilot","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","runAction","imV2ChatGetDialogId","externalId","then","loadComments","postId","autoJoin","createIfNotExists","loadCommentInfo","channelDialogId","messageIds","map","imV2ChatMessageCommentInfoList","userManager","addUsersToModel","resetChat","fields","inited","actionName","actionResult","loadedDialogId","loading","chatsPromise","clearCollection","pinnedMessages","handleChatLoadResponse","contextId","LayoutManager","setLastOpenedElement","Layout","openCopilot","openLines","currentLayoutName","getLayout","isStringFilled","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","preparedFields","createResult","imV2ChatAdd","Error","newChatId","newDialogId","preparedConfig","getBase64","managers","members","allMembers","ownerId","Set","toUpperCase","entityType","title","description","searchable","isAvailableInSearch","manageUsersAdd","manageUsersDelete","manageUi","manageSettings","manageMessages","conferencePassword","copilotMainRole","entries","key","value","isUndefined","chatType","toLowerCase","userCounter","owner","permissions","UpdateService","prepareAvatar","avatarFile","isResizableImage","reject","MAX_AVATAR_SIZE","preview","resizedAvatar","resizeImage","width","height","changeAvatar","avatarInBase64","imV2ChatUpdate","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","DEBOUNCE_TIME","Runtime","debounce","muteChat","action","unmuteChat","imChatMute","actionText","actionType","PinService","pinChat","ACTION","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","add","clearTimeout","readTimeout","setTimeout","rawChatId","clearDialogMark","markedId","unread","onlyRecent","queueChatId","Number","parseInt","size","copiedMessageIds","readMessagesCount","readResult","maxMessageId","Math","max","lastReadId","lastId","newCounter","counters","parentChatId","comment","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","imV2ChatDeleteUser","leaveChat","getUserId","joinChat","imV2ChatJoin","addManager","managerList","includes","newManagerList","payload","userIds","imV2ChatAddManagers","removeManager","filter","managerId","imV2ChatDeleteManagers","ChatService","loadUnread","lastUnreadMessageId","query","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","loadContextByChatId","commentChatId","targetCommentInfo","find","targetMessageId","reloadMessageList","savedPositionMessageId","wasInitedBefore","loadInitialMessages","imV2ChatMessageList","rawMessages","lastMessageId","newMaxId","messagesCollection","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","additionalMessagesPromise","commentInfoPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","text","imV2ChatMessageUpdate","isEdited","DeleteService","deleteMessage","isUuidV4","isDeleted","replyId","alwaysCompleteDeleteChats","channel","openChannel","neverCompleteDeleteChats","newLastId","imV2ChatMessageDelete","previousMessage","EventEmitter","emit","EventType","onMessageDeleted","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","BX","UI","Notification","Center","notify","content","Loc","getMessage","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","sendMessage","sendMessageWithFiles","fileIds","forwardMessages","forwardIds","commentMessage","forwardUuidMap","forwardedMessages","force","requestParams","response","errors","retrySendMessage","tempMessageId","unsentMessage","sendCopilotPrompt","sendResult","temporaryId","oldId","newId","defaultFields","authorId","sending","getUuidV4","FILE_ID","promptCode","messageService","templateId","queryData","toString","imV2ChatMessageSend","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","uuidMap","uuid","keys","preparedMessages","forward","isForward","chatTitle","requestPrams","addPromises","startsWith","currentUser","methodName","code","NotificationService","store","restClient","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","NOTIFY_ID","NOTIFY_VALUE","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","CONVERT_TEXT","batchQueryParams","imNotifyGet","imNotifySchemaGet","LAST_ID","LAST_TYPE","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","destroy","DiskService","fileId","file_id","imDiskFileDelete","save","imDiskFileSave","MAX_FILES_IN_ONE_MESSAGE","UploaderWrapper","setEventNamespace","eventNamespace","bind","subscribe","uploader","cancel","createUploader","diskFolderId","uploaderId","autoUpload","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","getCustomData","getExtension","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","treatOversizeImageAsFile","ignoreUnknownImageTypes","maxFileSize","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","getData","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","onUploadComplete","removeFilesFromServer","start","setAutoUpload","addFiles","tasks","firstTenTasks","addedFiles","task","unsubscribe","addFile","tempFileId","customData","sendAsFile","onFileUploadCancel","uploaderList","getFile","remove","UploadingService","uploadFromClipboard","clipboardEvent","imagesOnly","clipboardData","isFilePasted","preventDefault","getFilesFromDataTransfer","isImage","uploaderFiles","uploadFromInput","rawFiles","target","uploadFromDragAndDrop","dataTransfer","uploadFileFromDisk","messageWithFile","commitFile","temporaryFileId","realFileId","fromDisk","checkDiskFolderId","messageText","fileIdParams","disk_id","upload_id","imDiskFileCommit","template_id","file_template_id","as_file","FileStatus","commitMessage","getServerFileId","every","sendSeparateMessagesWithFiles","filesForUploader","preparedFile","getFileTypeByExtension","ext","extension","sizeInt","wait","progress","authorName","getId","getProgress","upload","imDiskFolderGet","ID","commit","getBinary","FileType","previewFile","getClientPreview","setCustomData","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","previewData","asFile","getSize","isFailed","blob","getPreviewUrl","getPreviewWidth","getPreviewHeight","image","urlPreview","urlShow","URL","createObjectURL","fileType","video","split","splice","filesPreviewStatus","autoUploadFlag","messagesToSend","hasText","getError","wasSent","getCode","getDescription","SettingsService","changeSetting","settingName","imV2SettingsGeneralUpdate","LinesService","getDialogIdByUserCode","userCode","linesDialogGet","USER_CODE","CopilotService","roleCode","chatService","Analytics","CommentsService","imV2ChatCommentSubscribe","imV2ChatCommentUnsubscribe","readAllChannelComments","currentChannelCounter","imV2ChatCommentReadAll"],"mappings":"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"}